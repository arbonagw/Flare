//
// This work is distributed under the General Public License,
// see LICENSE for details
//
// @author Gwennaël ARBONA
//

//-----------------------------------------------
//	Deferred shading shaders
//-----------------------------------------------

// Ambient lighting
fragment_program PS_Ambient glsl
{
	source PS_Ambient.glsl
	
	default_params
	{
		param_named_auto ambientColor ambient_light_colour 0		
		param_named_auto proj projection_matrix
		param_named_auto farClipDistance far_clip_distance
	}
}

// Shadow caster
fragment_program PS_ShadowCaster glsl
{
	source PS_ShadowCaster.glsl
	default_params
	{
		param_named_auto cFarDistance far_clip_distance
	}
}


//-----------------------------------------------
//	Vertex shaders
//-----------------------------------------------

// Main vertex shader
vertex_program VS_Master glsl
{
	source VS_Master.glsl
	default_params
	{
		param_named_auto cWorldViewProj	worldviewproj_matrix
		param_named_auto cWorldView		worldview_matrix
		param_named_auto cEyePosition	camera_position_object_space
	}
}

// Basic vertex shader
vertex_program VS_UVMap glsl
{
	source VS_UVMap.glsl
	default_params
	{
		param_named farCorner float3 1 1 1
		param_named_auto projection		worldviewproj_matrix
	}
}

// Lights
vertex_program VS_LightMaterial glsl
{
	source VS_LightMaterial.glsl
	default_params
	{
		param_named_auto worldViewProj worldviewproj_matrix
	}
}

// Lights
vertex_program VS_Ambient glsl
{
	source VS_Ambient.glsl
	default_params
	{
		param_named_auto flip render_target_flipping
		param_named farCorner float3 1 1 1
	}
}

// Shadow caster
vertex_program VS_ShadowCaster glsl
{
	source VS_ShadowCaster.glsl
	default_params
	{
		param_named_auto cWorldViewProj worldviewproj_matrix
		param_named_auto cWorldView worldview_matrix
	}
}


//-----------------------------------------------
//	Basic shaders
//-----------------------------------------------

// GBuffer debugging
fragment_program PS_ShowGBuffer glsl
{
	source PS_ShowGBuffer.glsl
	default_params
	{
		param_named Tex0			int 0
		param_named Tex1			int 1
		param_named Tex2			int 2
	}
}

// Basic color output
fragment_program PS_ShowColour glsl
{
	source PS_ShowColour.glsl
	default_params
	{
		param_named Tex0			int 0
	}
}

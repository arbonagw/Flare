//
// This work is distributed under the General Public License,
// see LICENSE for details
//
// @author Gwennaël ARBONA
//

material DeferredShading/AmbientLight
{
    technique
    {
		pass
		{
			lighting off
			
			depth_write on
			depth_check on
			
			vertex_program_ref VS_Ambient
			{
			}
			fragment_program_ref PS_Ambient
			{
			}
			
			texture_unit
			{
				content_type compositor DeferredShading/GBuffer mrt_output 0
				tex_address_mode clamp
				filtering none
			}
			texture_unit
			{
				content_type compositor DeferredShading/GBuffer mrt_output 1
				tex_address_mode clamp
				filtering none
			}
		}
	}
}

material DeferredShading/Post/ShowColour
{
    technique
    {
    	pass
		{
			cull_hardware none
			cull_software none
			depth_func always_pass
			fragment_program_ref PS_ShowColour
			{
			}
			vertex_program_ref VS_Ambient
			{
			}
			texture_unit
			{
				content_type compositor DeferredShading/GBuffer mrt_output 0
				tex_address_mode clamp
				filtering none
			}
		}
	}
}

material DeferredShading/Post/ShowNormal
{
    technique
    {
    	pass
		{
			cull_hardware none
			cull_software none
			depth_func always_pass
			fragment_program_ref PS_ShowColour
			{
			}
			vertex_program_ref VS_Ambient
			{
			}
			texture_unit
			{
				content_type compositor DeferredShading/GBuffer mrt_output 1
				tex_address_mode clamp
				filtering none
			}
		}
	}
}

material DeferredShading/Post/ShowDS
{
    technique
    {
    	pass
		{
			cull_hardware none
			cull_software none
			depth_func always_pass
			fragment_program_ref PS_ShowDS
			{
			}
			vertex_program_ref VS_Ambient
			{
			}
			texture_unit
			{
				content_type compositor DeferredShading/GBuffer mrt_output 0
				tex_address_mode clamp
				filtering none
			}
			texture_unit
			{
				content_type compositor DeferredShading/GBuffer mrt_output 1
				tex_address_mode clamp
				filtering none
			}
		}
	}
}

material DeferredShading/Post/ShowGlow
{
    technique
    {
    	pass
		{
			cull_hardware none
			cull_software none
			depth_func always_pass
			fragment_program_ref PS_ShowColour
			{
			}
			vertex_program_ref VS_Ambient
			{
			}
			texture_unit
			{
				content_type compositor DeferredShading/GBuffer mrt_output 2
				tex_address_mode clamp
				filtering none
			}
		}
	}
}

//
// This work is distributed under the General Public License,
// see LICENSE for details
//
// @author Gwennaël ARBONA
//

//-----------------------------------------------
//	Programs
//-----------------------------------------------

// Main vertex shader
vertex_program VS_Master glsl
{
	source VS_Master.glsl
}

// Main pixel shader
fragment_program PS_Master glsl
{
	source PS_Master.glsl
	default_params
	{
		param_named normalStrength		float 1.0
		param_named specularStrength	float 0.2
		param_named specularPower		float 2.0
		param_named diffuseMap			int 0
		param_named normalMap			int 1
		param_named specMap				int 2
		param_named envMap				int 3
	}
}

// Emissive pixel shader
fragment_program PS_Emissive glsl
{
	source PS_Emissive.glsl
	default_params
	{
		param_named emissiveMap			int 0
	}
}


//-----------------------------------------------
//	Material
//-----------------------------------------------

// Master material
material Master
{
	technique shaders
	{
		pass
		{
			lighting on
			iteration once_per_light
            scene_blend colour_blend
			
			vertex_program_ref VS_Master
			{
				param_named_auto lightPosition	light_position_object_space 0
				param_named_auto eyePosition	camera_position_object_space
				param_named_auto projection		worldviewproj_matrix
			}

			fragment_program_ref PS_Master
			{
				param_named_auto lightDiffuse	light_diffuse_colour 0
				param_named_auto lightSpecular	light_specular_colour 0
			}
			
			texture_unit
			{
				texture_alias diffuseMap
				texture black.png
			}
			
			texture_unit
			{
				texture_alias normalMap
				texture black.png
			}
			
			texture_unit
			{
				texture_alias specMap
				texture black.png
			}
			
			texture_unit
			{
				texture_alias envMap
				cubic_texture cubemap.dds combinedUVW
				filtering linear linear linear
				tex_address_mode clamp
			}
		}
	}

	technique postprocess
	{
		pass
		{
            depth_bias 1
			lighting off
            scene_blend add
			
			vertex_program_ref VS_Master
			{
				param_named_auto lightPosition	light_position_object_space 0
				param_named_auto eyePosition	camera_position_object_space
				param_named_auto projection		worldviewproj_matrix
			}

			fragment_program_ref PS_Emissive
			{
				param_named lightColor			float4 1 1 1
			}

			texture_unit
			{
				texture_alias emissiveMap
				texture white.png
			}
		}
	}

}
